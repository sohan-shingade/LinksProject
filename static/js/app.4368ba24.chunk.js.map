{"version":3,"sources":["web-build/register-service-worker.js","App.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","links","title","url","esurl","color","App","props","handlePress","Linking","Alert","alert","ButtonLink","item","style","width","height","backgroundColor","justifyContent","alignItems","flexDirection","accessibilityRole","href","target","flex","borderColor","borderWidth","onPress","Platform","OS","onTextInputChange","text","setState","passInput","logError","state","loggedIn","this","data","renderItem","keyExtractor","index","toString","padding","textAlign","value","onChangeText","fontSize","React","Component"],"mappings":"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","file":"static/js/app.4368ba24.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/LinksProject/expo-service-worker.js', { scope: '/LinksProject/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  FlatList,\n  SafeAreaView,\n  Platform,\n  TextInput,\n  View,\n} from 'react-native';\nimport * as Linking from 'expo-linking';\n\nconst links = [\n  {\n    title: 'Plus',\n    url: 'https://www.Walmart.com/plus',\n    esurl: 'https://www-e16.walmart.com/plus',\n    color: '#d88d8a',\n  },\n  {\n    title: 'Plus Faq',\n    url: 'https://www.Walmart.com/plus/faq',\n    esurl: 'https://www-e16.walmart.com/plus/faq',\n    color: 'yellow',\n  },\n  {\n    title: 'Trial Plans',\n    url: 'https://www.Walmart.com/plus/faq/trial-membership-plans',\n    esurl: 'https://www-e16.walmart.com/plus/faq/trial-membership-plans',\n    color: 'gray',\n  },\n  {\n    title: 'Plus Plans',\n    url: 'https://www.Walmart.com/plus/faq/walmart-plus-membership-plans',\n    esurl: 'https://www-e16.walmart.com/plus/faq/walmart-plus-membership-plans',\n    color: 'orange',\n  },\n  {\n    title: 'Payment and Billing',\n    url: 'https://www.Walmart.com/plus/faq/payment-and-billing',\n    esurl: 'https://www-e16.walmart.com/plus/faq/payment-and-billing',\n    color: 'cyan',\n  },\n  {\n    title: 'Prior Delivery Unlimited Customers',\n    url: 'https://www.Walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    esurl:\n      'https://www-e16.walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    color: 'red',\n  },\n  {\n    title: 'Prior Delivery Unlimited Customers',\n    url: 'https://www.Walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    esurl:\n      'https://www-e16.walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    color: '#b19cd9',\n  },\n  {\n    title: 'Free Unlimited Delivery',\n    url: 'https://www.Walmart.com/plus/faq/free-unlimited-delivery',\n    esurl: 'https://www-e16.walmart.com/plus/plus/faq/free-unlimited-delivery',\n    color: '#b5651d',\n  },\n  {\n    title: 'Prefered Time Slots',\n    url: 'https://www.Walmart.com/plus/faq/preferred-time-slots',\n    esurl: 'https://www-e16.walmart.com/plus/faq/preferred-time-slots',\n    color: '#2f96a3',\n  },\n  {\n    title: 'Scan and Go',\n    url: 'https://www.Walmart.com/plus/faq/mobile-scan-and-go',\n    esurl: 'https://www-e16.walmart.com/plus/faq/mobile-scan-and-go',\n    color: '#baefc6',\n  },\n  {\n    title: 'Fuel Discounts',\n    url: 'https://www.Walmart.com/plus/faq/fuel-discounts',\n    esurl: 'https://www-e16.walmart.com/plus/faq/fuel-discounts',\n    color: '#20ee9c',\n  },\n];\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n      passInput: '',\n      logError: false,\n    };\n  }\n\n  handlePress = (url) => {\n    const supported = Linking.canOpenURL(url);\n    if (supported) {\n      // Opening the link with some app, if the URL scheme is \"http\" the web link should be opened\n      // by some browser in the mobile\n      Linking.openURL(url);\n    } else {\n      Alert.alert('Don`t know how to open this URL: ${url}');\n    }\n  };\n\n  ButtonLink = (item) => (\n    <View\n      style={{\n        width: 300,\n        height: 100,\n        backgroundColor: item.color,\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'row',\n      }}>\n      <TouchableOpacity\n        accessibilityRole=\"link\"\n        href={item.url}\n        target=\"_blank\"\n        style={{\n          flex: 1,\n          height: 100,\n          backgroundColor: item.color,\n          borderColor: 'black',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderWidth: 4,\n        }}\n        onPress={() => {\n          if (Platform.OS !== 'web') {\n            this.handlePress(item.url);\n          }\n        }}>\n        <Text accessibilityRole=\"link\" href={item.url} target=\"_blank\">\n          walmart com {item.title}\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        accessibilityRole=\"link\"\n        href={item.esurl}\n        target=\"_blank\"\n        style={{\n          flex: 1,\n          height: 100,\n          backgroundColor: item.color,\n          borderColor: 'black',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderWidth: 4,\n        }}\n        onPress={() => {\n          if (Platform.OS !== 'web') {\n            this.handlePress(item.esurl);\n          }\n        }}>\n        <Text accessibilityRole=\"link\" href={item.esurl} target=\"_blank\">\n          es16 {item.title}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  render() {\n    return this.state.loggedIn ? (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <FlatList\n          data={links}\n          renderItem={(item) => this.ButtonLink(item.item)}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </SafeAreaView>\n    ) : (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <View style={{padding: 20}}>\n          <TextInput\n            style={{\n              height: 50,\n              borderColor: 'gray',\n              borderWidth: 3,\n              width: 300,\n              textAlign: 'center',\n              color: 'black',\n            }}\n            value={this.state.passInput}\n            onChangeText={(text) => this.onTextInputChange(text)}></TextInput>\n        </View>\n        <TouchableOpacity\n          style={{\n            padding: 20,\n            width: 300,\n            height: 100,\n            backgroundColor: 'blue',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          onPress={() => {\n            if (this.state.passInput === 'Wal+Plus') {\n              this.setState({\n                loggedIn: true,\n                logError: false,\n              });\n            } else {\n              this.setState({\n                logError: true,\n              });\n            }\n          }}>\n          <Text style={{color: 'white', fontSize: 20}}>Submit</Text>\n        </TouchableOpacity>\n        <Text\n          style={{fontSize: 15, color: this.state.logError ? 'red' : 'white'}}>\n          Wrong Password\n        </Text>\n      </SafeAreaView>\n    );\n  }\n\n  onTextInputChange = (text) => {\n    this.setState({\n      passInput: text,\n      logError: false,\n    });\n  };\n}\n"],"sourceRoot":""}