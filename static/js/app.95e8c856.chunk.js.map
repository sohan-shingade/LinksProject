{"version":3,"sources":["web-build/register-service-worker.js","App.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","links","title","url","color","App","props","handlePress","Linking","Alert","alert","ButtonLink","item","accessibilityRole","href","target","style","width","height","backgroundColor","justifyContent","alignItems","onPress","Platform","OS","onTextInputChange","text","setState","passInput","logError","state","loggedIn","this","flex","data","renderItem","keyExtractor","index","toString","padding","borderColor","borderWidth","textAlign","value","onChangeText","fontSize","React","Component"],"mappings":"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","file":"static/js/app.95e8c856.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/LinksProject/expo-service-worker.js', { scope: '/LinksProject/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  FlatList,\n  SafeAreaView,\n  Platform,\n  TextInput,\n  View,\n} from 'react-native';\nimport * as Linking from 'expo-linking';\n\nconst links = [\n  {\n    title: 'Plus',\n    url: 'https://www.Walmart.com/plus',\n    color: '#d88d8a',\n  },\n  {\n    title: 'Plus Faq',\n    url: 'https://www.Walmart.com/plus/faq',\n    color: 'yellow',\n  },\n  {\n    title: 'Trial Plans',\n    url: 'https://www.Walmart.com/plus/faq/trial-membership-plans',\n    color: 'gray',\n  },\n  {\n    title: 'Plus Plans',\n    url: 'https://www.Walmart.com/plus/faq/walmart-plus-membership-plans',\n    color: 'orange',\n  },\n  {\n    title: 'Payment and Billing',\n    url: 'https://www.Walmart.com/plus/faq/payment-and-billing',\n    color: 'cyan',\n  },\n  {\n    title: 'Prior Delivery Unlimited Customers',\n    url: 'https://www.Walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    color: 'red',\n  },\n  {\n    title: 'Prior Delivery Unlimited Customers',\n    url: 'https://www.Walmart.com/plus/faq/prior-delivery-unlimited-customers',\n    color: '#b19cd9',\n  },\n  {\n    title: 'Free Unlimited Delivery',\n    url: 'https://www.Walmart.com/plus/faq/free-unlimited-delivery',\n    color: '#b5651d',\n  },\n  {\n    title: 'Prefered Time Slots',\n    url: 'https://www.Walmart.com/plus/faq/preferred-time-slots',\n    color: '#2f96a3',\n  },\n  {\n    title: 'Open Time Slots',\n    url: 'https://www.Walmart.com/plus/faq/open-time-slot-notifications',\n    color: '#81b887',\n  },\n  {\n    title: 'Scan and Go',\n    url: 'https://www.Walmart.com/plus/faq/mobile-scan-and-go',\n    color: '#baefc6',\n  },\n  {\n    title: 'Fuel Discounts',\n    url: 'https://www.Walmart.com/plus/faq/fuel-discounts',\n    color: '#20ee9c',\n  },\n  {\n    title: 'Early Access Deals',\n    url: 'https://www.Walmart.com/plus/faq/early-access-to-deals',\n    color: '#61d308',\n  },\n];\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedIn: false,\n      passInput: '',\n      logError: false,\n    };\n  }\n\n  handlePress = (url) => {\n    const supported = Linking.canOpenURL(url);\n    if (supported) {\n      // Opening the link with some app, if the URL scheme is \"http\" the web link should be opened\n      // by some browser in the mobile\n      Linking.openURL(url);\n    } else {\n      Alert.alert(`Don't know how to open this URL: ${url}`);\n    }\n  };\n\n  ButtonLink = (item) => (\n    <TouchableOpacity\n      accessibilityRole=\"link\"\n      href={item.url}\n      target=\"_blank\"\n      style={{\n        width: 300,\n        height: 100,\n        backgroundColor: item.color,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        if (Platform.OS !== 'web') {\n          this.handlePress(item.url);\n        }\n      }}>\n      <Text accessibilityRole=\"link\" href={item.url} target=\"_blank\">\n        {item.title}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  render() {\n    return this.state.loggedIn ? (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <FlatList\n          data={links}\n          renderItem={(item) => this.ButtonLink(item.item)}\n          keyExtractor={(item, index) => index.toString()}\n        />\n      </SafeAreaView>\n    ) : (\n      <SafeAreaView\n        style={{\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <View style={{padding: 20}}>\n          <TextInput\n            style={{\n              height: 50,\n              borderColor: 'gray',\n              borderWidth: 3,\n              width: 300,\n              textAlign: 'center',\n              color: 'black',\n            }}\n            value={this.state.passInput}\n            onChangeText={(text) => this.onTextInputChange(text)}></TextInput>\n        </View>\n        <TouchableOpacity\n          style={{\n            padding: 20,\n            width: 300,\n            height: 100,\n            backgroundColor: 'blue',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          onPress={() => {\n            if (this.state.passInput === 'Wal+Plus') {\n              this.setState({\n                loggedIn: true,\n                logError: false,\n              });\n            } else {\n              this.setState({\n                logError: true,\n              });\n            }\n          }}>\n          <Text style={{color: 'white', fontSize: 20}}>Submit</Text>\n        </TouchableOpacity>\n        <Text\n          style={{fontSize: 15, color: this.state.logError ? 'red' : 'white'}}>\n          Wrong Password\n        </Text>\n      </SafeAreaView>\n    );\n  }\n\n  onTextInputChange = (text) => {\n    this.setState({\n      passInput: text,\n      logError: false,\n    });\n  };\n}\n"],"sourceRoot":""}